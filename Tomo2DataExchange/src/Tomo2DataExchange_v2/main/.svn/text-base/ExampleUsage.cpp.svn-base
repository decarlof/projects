//---------------------------------------------------------------------------

#pragma hdrstop
#pragma argsused

#include <math.h>

#include "nexusbox.h"

//---------------------------------------------------------------------------
void GenerateData (void)
{	
NexusBoxClass   *nexus_test;
int				loop;
float           *created_data;
char            file_name[256],
				file_path[256];
int             rank,
				type;
int             dims[2];

	strcpy (file_path, "./");

	created_data = (float *) malloc(sizeof(float *)*512*512);
	memset (created_data, 0, sizeof(float)*512*512);

	nexus_test = new NexusBoxClass ();
	nexus_test->SetFileMode (HDF5_MODE);

/*NX_COMP_NONE
 * NX_COMP_LZW
 * NX_COMP_RLE
 * NX_COMP_HUF
 */
	nexus_test->CompressionScheme (NX_COMP_NONE);

	rank = 2;
	type = NX_FLOAT32;
	dims[0] = 512;
	dims[1] = 512;
	nexus_test->RegisterVar ("DATA", rank, dims, type, created_data);

	nexus_test->InitTemplate ("./", "norm.template");

	for (int yloop=20;yloop<500;yloop++)
		for (int xloop=166;xloop<346;xloop++)
			created_data[yloop*512+xloop]=0.5*sin(((xloop-166)*3.14)/180);

	nexus_test->UpdateVars ();

	sprintf (file_name, "test_data.hdf", loop);
	nexus_test->WriteAll (file_path, file_name);

	delete (nexus_test);
}
//---------------------------------------------------------------------------

void ReadData (void)
{
NexusBoxClass   *nexus_test;
char			index[256],
				data_index[256];
int             rank,
				type,
				dims[2];
long			num_index_elements;


	nexus_test = new NexusBoxClass ();

	nexus_test->SetReadScheme (ENTIRE_CONTENTS);
	
	//Path must be full path and must contain an ending path seperator (yes, I'm lazy and haven't fixed this yet)
//	nexus_test->ReadAll("./", "test_data.hdf");
	nexus_test->ReadAll("/development/tomo_512x512x720/", "sample02.hdf");

	printf ("Data indices from file:");

	//Meta data is stored in a hierarchy similar to a file directory--so we treat it as such
	//Indexes are "paths" to the data and look like "entry1;data;data".  where ; is the path seperator.
	//The last directory may be a group, a field or an attribute--only fields and attributes contain data.
	//Groups contain other groups and fields or attributes.
	nexus_test->GetIndexSize(&num_index_elements);

	//loop through all the indexes and print out something about them.
	for (int loop=0;loop<=num_index_elements;loop++)
	{
		strcpy (index, nexus_test->GetIndex(loop));
		nexus_test->GetDatumInfo(index, &rank, dims, &type);

		//groups will have a rank of -1--all others will have a positive rank
		printf ("%s -- rank: %d, dims: (%d, %d), type: %d\n", nexus_test->GetIndex(loop), rank, dims[0], dims[1], type);
	}

	printf ("\n\n");

	delete (nexus_test);

}

//---------------------------------------------------------------------------
int main(int argc, char* argv[])
{

//	GenerateData ();
	ReadData ();

	return 0;
}
//---------------------------------------------------------------------------
